---
import MainLayout from "../layout/MainLayout.astro";
---

<MainLayout>
    <div class=" flex items-center flex-col w-[100%] ">
        <h1 class="mt-10 font-bold text-3xl text-indigo-700">Register</h1>
        <form id="register-form" class="flex flex-col mt-10 p-10 border-2 border-indigo-700 rounded-3xl bg-white">
            <div class="flex justify-between mb-4">
                <label for="name" >First Name</label>
                <input type="text" id="name" name="name" class="ml-4 w-[200px] border border-gray-400 rounded-lg px-2">
            </div>
            <div class="flex justify-between mb-4">
                <label for="lastname" >Last Name</label>
                <input type="text" id="lastname" name="lastname" class="ml-4 w-[200px] border border-gray-400 rounded-lg px-2 ">
            </div>
            <div class="flex justify-between mb-4">
                <label for="birthday" >Birthday</label>
                <input type="date" id="birthday" name="birthday" class="ml-4 w-[200px] border border-gray-400 rounded-lg px-2">
            </div>
            <div class="flex justify-between mb-4">
                <label for="email" >Email</label>
                <input type="email" id="email" name="email" class="ml-4 w-[200px] border border-gray-400 rounded-lg px-2">
            </div>
            <div class="flex justify-between mb-4">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" autocomplete="on" class="ml-4 w-[200px] border border-gray-400 rounded-lg px-2">
            </div>
            <div class="flex justify-between mb-4">
                <label for="confpassword" >Confirm Password</label>
                <input type="password" id="confpassword" name="confpassword" autocomplete="on" class="ml-4 w-[200px] border border-gray-400 rounded-lg px-2">
            </div>
            <div>
                <p id="message" class="text-red-400 text-sm hidden"></p>
            </div>
            <div class="flex items-center justify-center mt-10">
                <button class="p-4 bg-indigo-700 border-2 border-transparent text-white hover:bg-white hover:text-indigo-700 hover:border-indigo-700 rounded-xl transition duration-300 shadow-lg shadow-indigo-500/50">Create Account</button>
            </div>
        </form>
    </div>
</MainLayout>


<script is:inline>
    document.addEventListener('astro:page-load', ()=> {
        console.log("register.js loaded");
        const form = document.getElementById('register-form');
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            const form = e.target;
            const name = form.elements['name'].value;
            const lastname = form.elements['lastname'].value;
            const email = form.elements['email'].value;
            const age = form.elements['birthday'].value;
            const password = form.elements['password'].value;

            const message = document.getElementById('message');

            if(name.length < 2 || name.length == ""){
                message.innerText = "Name must be at least 2 characters long";
                message.classList.remove('hidden');
                form.elements['name'].value = '';
                return;
            }
            if(lastname.length < 2 || lastname.length == ""){
                message.innerText = "Lastname must be at least 2 characters long";
                message.classList.remove('hidden');
                form.elements['lastname'].value = '';
                return;
            }

            if(email.length < 6 || email.length == ""){
                message.innerText = "Email must be at least 6 characters long";
                message.classList.remove('hidden');
                form.elements['email'].value = '';
                return;
            }

            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                message.innerText = "Please enter a valid email address";
                message.classList.remove('hidden');
                form.elements['email'].value = '';
                return;
            }

            if(age == ""){
                message.innerText = "Please enter your birthday";
                message.classList.remove('hidden');
                return;
            }

            const birthDate = new Date(age);
            const today = new Date();
            let ageInYears = today.getFullYear() - birthDate.getFullYear();
            const monthDifference = today.getMonth() - birthDate.getMonth();
            if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {
                ageInYears =- 1;
            }

            if (ageInYears < 18 || ageInYears > 120) {
                message.innerText = "Age must be between 18 and 120 years";
                message.classList.remove('hidden');
                form.elements['birthday'].value = '';
                return;
            }

            const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
            if (!passwordRegex.test(password)) {
                message.innerText = "Password must contain at least one letter, one number, and one special character";
                message.classList.remove('hidden');
                form.elements['password'].value = '';
                return;
            }

            if (form.elements['password'].value !== form.elements['confpassword'].value) {
                message.innerText = "Passwords do not match";
                message.classList.remove('hidden');
                form.elements['password'].value = '';
                form.elements['confpassword'].value = '';
                return;
            }

            const newUser = {
                name: capitalize(form.elements['name'].value),
                lastname: capitalize(form.elements['lastname'].value),
                birthday: form.elements['birthday'].value,
                email: form.elements['email'].value,
                password: form.elements['password'].value,
                confpassword: form.elements['confpassword'].value,
                myFlats: [],
                favFlats: []
            }
            form.reset()
            saveUser(newUser);
            window.location.href = '/login';
        });

        function saveUser(user){
            
            const users = JSON.parse(localStorage.getItem('users'));
            
            if(users == null){
                const arrayUsers = [user]
                localStorage.setItem('users', JSON.stringify(arrayUsers));
            } else {
                users.push(user)
                localStorage.setItem('users', JSON.stringify(users));
            }
        }

        const capitalize = (str) => {
        return str.charAt(0).toUpperCase() + str.slice(1);
      }


    })
</script>