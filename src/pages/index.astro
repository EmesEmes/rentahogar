---
import Card from "../components/Card.astro"
import Table from "../components/Table.astro"
import TextH3 from "../components/TextH3.astro"
import MainLayout from "../layout/MainLayout.astro"



---

<MainLayout title="Home | RentaHogar">
  <div class="container mx-auto overflow-x-hidden p-4" id="container-index">
    <TextH3>your favorite flats</TextH3>
    <button class="text-sm cursor-pointer mb-4 text-blue-600 dark:text-white underline flex items-center gap-1" id="show-grid"><span><img class="h-[16px]" src="/images/grid-blue.svg" alt=""></span>Show grid</button>
    <p id="message-grid" ></p>
    <div class="overflow-x-auto">
      <Table id="table-index"/>
    </div>
    <div class="hidden grid-cols-3 max-md:grid-cols-2 max-sm:grid-cols-1 gap-4 container mx-auto" id="grid">
    
    </div>
  </div>
  
  
</MainLayout>
<script src="../index.js"></script>


<script type="module" is:inline>
  import Swal from '../../node_modules/sweetalert2';
  document.addEventListener('astro:page-load', ()=> {

    const showGrid = document.getElementById('show-grid');
    const grid = document.getElementById('grid');
    const table = document.getElementById('table-index');

    showGrid.addEventListener('click', () => {
      grid.classList.toggle('hidden');
      grid.classList.toggle('grid');
      table.classList.toggle('hidden');
      showGrid.innerHTML = grid.classList.contains('hidden') ? '<span><img class="h-[16px]" src="/images/grid-blue.svg" alt=""></span>Show grid' : '<span><img class="h-[16px]" src="/images/table-blue.svg" alt=""></span>Show table';
    });


    const user_logged= JSON.parse(localStorage.getItem('currentUser'));

    if(!user_logged){
      const div = document.getElementById('container-index');
      const table = document.getElementById('table-index');
      table.style.display = 'none';
      div.innerHTML = '<h3 class="text-center text-indigo-700 text-3xl my-10 capitalize">You need to be logged to see your favorite flats</h3>'

    }
    const fillTable = () =>{
    const user_logged= JSON.parse(localStorage.getItem('currentUser'));
    const favorites = JSON.parse(localStorage.getItem('flats_favorites'));
    const flats = JSON.parse(localStorage.getItem('flats'));
    const tbody = document.querySelector('#table-index tbody');
    const grid = document.getElementById('grid');
    tbody.innerHTML = '';
    
    if (favorites && Array.isArray(favorites)){ 
      const filtered = favorites.filter((item)=>{
          return  item.emailUser === user_logged.email
      
      })
      const flatsTable = filtered.map( (item)=>{
          const id = item.idFlat;
          return flats.find((flat)=> {
              return flat.id === id
          })
      })
      if (flatsTable!= null && Array.isArray(flatsTable)) {
        flatsTable.forEach((flat)=>{
          const tr = document.createElement('tr');
          tr.innerHTML = '' +
            '<td class="border border-slate-600 bg-white rounded-lg px-2 dark:bg-transparent dark:text-white dark:border-white">' + flat.city + '</td>' +
            '<td class="border border-slate-600 bg-white rounded-lg px-2 dark:bg-transparent dark:text-white dark:border-white">' + flat.streetName + '</td>' +
            '<td class="border border-slate-600 bg-white rounded-lg px-2 dark:bg-transparent dark:text-white dark:border-white">' + flat.streetNumber + '</td>' +
            '<td class="border border-slate-600 bg-white rounded-lg px-2 dark:bg-transparent dark:text-white dark:border-white">' + flat.hasAc + '</td>' +
            '<td class="border border-slate-600 bg-white rounded-lg px-2 dark:bg-transparent dark:text-white dark:border-white">' + flat.areaSize + '</td>' +
            '<td class="border border-slate-600 bg-white rounded-lg px-2 dark:bg-transparent dark:text-white dark:border-white">' + flat.price + '</td>' +
            '<td class="border border-slate-600 bg-white rounded-lg px-2 dark:bg-transparent dark:text-white dark:border-white">' + flat.dateAvailable + '</td>' +
            '<td class="border border-slate-600 bg-white rounded-lg px-2 dark:bg-transparent dark:text-white dark:border-white">' + flat.yearBuilt + '</td>' 
        
          const tdRemove = document.createElement('td');
          tdRemove.classList.add('border','border-slate-600','bg-white','rounded-lg','px-2');
          const button = document.createElement('button');
          
          button.classList.add('p-2','bg-indigo-700','border-2','border-transparent','text-white','hover:bg-white','hover:text-indigo-700','hover:border-indigo-700','rounded-lg','transition','duration-300', 'w-full');
          button.innerText = 'Remove';
          button.onclick = () => addFavorite(flat.id);
          
          tdRemove.appendChild(button);

          tr.appendChild(tdRemove);

          tbody.appendChild(tr);

        });
      } if(flatsTable.length === 0) {
        const tr = document.createElement('tr');
        tr.innerHTML = '<td colspan="8" class="text-center text-white text-3xl my-10 capitalize">You have no favorite flats</td>';
        tbody.appendChild(tr);
      }
            
        
    } 
  } 

  const fillGrid = () => {
        const user_logged= JSON.parse(localStorage.getItem('currentUser'));
        const favorites = JSON.parse(localStorage.getItem('flats_favorites'));
        const flats = JSON.parse(localStorage.getItem('flats'));
        const grid = document.getElementById('grid');
        grid.innerHTML = '';
        if (favorites && Array.isArray(favorites)){ 
      const filtered = favorites.filter((item)=>{
          return  item.emailUser === user_logged.email
      
      })
      const flatsTable = filtered.map( (item)=>{
          const id = item.idFlat;
          return flats.find((flat)=> {
              return flat.id === id
          })
      })
      if (flatsTable!= null && Array.isArray(flatsTable)) {
        flatsTable.forEach((flat)=>{
          const divCard = document.createElement('div');
          divCard.classList.add('border-2','border-indigo-700','rounded-xl','p-4', 'dark:bg-indigo-700');
          divCard.id = 'card-component';
          divCard.innerHTML = `
            <img src="/images/houses/${flat.image}.jpg" alt="casa ejemplo" class="rounded-xl">
            <div class="flex flex-col my-4">
              <p class="text-indigo-700 font-bold text-xl dark:text-white">City: <span  class="text-black font-normal">${flat.city}</span></p>
              <p class="text-indigo-700 font-bold text-xl dark:text-white">Street: <span  class="text-black font-normal">${flat.streetName}</span></p>
              <p class="text-indigo-700 font-bold text-xl dark:text-white">Street Number: <span  class="text-black font-normal">${flat.streetNumber}</span></p>
              <p class="text-indigo-700 font-bold text-xl dark:text-white">Area size: <span  class="text-black font-normal">${flat.areaSize}</span></p>
              <p class="text-indigo-700 font-bold text-xl dark:text-white">Has AC: <span  class="text-black font-normal">${flat.hasAc}</span></p>
              <p class="text-indigo-700 font-bold text-xl dark:text-white">Year Built: <span  class="text-black font-normal">${flat.yearBuilt}</span></p>
              <p class="text-indigo-700 font-bold text-xl dark:text-white">Rent Price: <span  class="text-black font-normal">${flat.price}</span></p>
              <p class="text-indigo-700 font-bold text-xl dark:text-white">Date Available: <span  class="text-black font-normal">${flat.dateAvailable}</span></p>
              <div class="flex items-center justify-center mt-10">
                
              </div>
            </div>
          `;

          const divRemove = document.createElement('div');
          const buttonDiv = document.createElement('button');
          
          buttonDiv.classList.add('p-2','bg-indigo-700','dark:bg-white', 'dark:text-indigo-700', 'border-2','border-transparent','text-white','hover:bg-white','hover:text-indigo-700','hover:border-indigo-700','rounded-lg','transition','duration-300', 'w-full');
          buttonDiv.textContent = 'Remove';
          buttonDiv.onclick = () => addFavorite(flat.id);
          
          divRemove.appendChild(buttonDiv);

          divCard.appendChild(divRemove);


          grid.appendChild(divCard);
        });
      } 
      if(flatsTable.length === 0) {
        const p = document.createElement('p');
        const ip = document.createElement('p');
        p.innerHTML = '<p class="text-center text-indigo-700 text-3xl my-10 capitalize dark:text-white col-span-3">You have no favorite flats</p>';
        grid.appendChild(ip);
        grid.appendChild(p);
        console.log(grid)
      }
            
        
    }
        

    } 

    function addFavorite(id){
        const favorites = JSON.parse(localStorage.getItem('flats_favorites'));
        const index = favorites.findIndex((item)=>{
            return item.idFlat === id
        })
        favorites.splice(index,1);
        localStorage.setItem('flats_favorites',JSON.stringify(favorites));
        Swal.fire({
                    position: "top-end",
                    icon: "success",
                    title: "Flat removed from favorites",
                    showConfirmButton: false,
                    timer: 1500
                });
        fillTable();
        fillGrid();
    }
  
    fillTable();
    fillGrid()
  })
  
  
  
</script>